{"version":3,"sources":["components/SideMenu/style.ts","components/Avatar/style.ts","components/Avatar/index.tsx","store/actions.ts","store/saga.js","store/rootSaga.ts","store/index.ts","components/SideMenu/ProfileInfo.tsx","components/SideMenu/index.tsx","components/RegistrationForm/style.tsx","components/RegistrationForm/index.tsx","handlers/LoginHandler/style.tsx","handlers/LoginHandler/CreateAccount.tsx","components/LoginForm/style.tsx","components/LoginForm/index.tsx","handlers/LoginHandler/SignIn.tsx","handlers/LoginHandler/index.tsx","handlers/UsersHandler/style.tsx","components/ControlBar/style.tsx","components/Searchbar/style.tsx","components/Searchbar/index.tsx","components/ControlBar/index.tsx","components/Table/style.tsx","components/Table/index.tsx","components/Popup/style.tsx","components/Popup/index.tsx","hooks/useScrollLock.ts","hooks/useKeyboardEvent.ts","components/Profile/style.tsx","components/Profile/index.tsx","handlers/UsersHandler/index.tsx","handlers/SettingsHandler/style.ts","handlers/SettingsHandler/index.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","NavLinks","nav","Link","NavLink","Button","button","UsernameText","p","Image","img","Avatar","src","alt","actions","registerUser","createAction","userRegistered","userLoginSubmitted","logoutButtonClicked","signInModeButtonClicked","signUpModeButtonClicked","viewProfileClicked","activeProfileClosed","profileDeleted","registrationSaga","payload","put","id","uuidv4","console","log","rootSaga","all","takeLatest","getType","generateUsers","users","avatar","Faker","image","uuid","firstName","lastName","email","dateOfBirth","format","past","push","persistConfig","key","storage","blacklist","initialState","mode","registeredUsers","activeUser","undefined","userData","activeProfile","sagaMiddleware","createSagaMiddleware","persistedReducer","persistReducer","state","action","produce","draft","type","map","user","includes","find","u","password","filter","data","store","createStore","composeWithDevTools","applyMiddleware","run","persistStore","useTypedSelector","useSelector","ProfileInfo","process","SideMenu","history","useHistory","isLoggedIn","useLocation","pathname","dispatch","useDispatch","exact","to","activeStyle","opacity","size","onClick","Form","FormikForm","Input","FormikField","InputSpan","span","ErrorWrapper","ErrorText","IconContainer","Schema","Yup","shape","required","min","max","confirmPassword","oneOf","RegistrationForm","handleSignup","values","initialValues","onSubmit","validationSchema","errors","touched","name","placeholder","SectionWrapper","MainContainer","SubContainer","SignInButton","CreateAccount","LoginForm","SignIn","LoginHandler","authetnicated","useEffect","header","ControlSpan","ResultsText","input","Searchbar","ControlBar","resultsLength","Table","list","headers","AvatarCell","cellData","style","height","ControlsCell","width","headerHeight","rowHeight","rowCount","length","rowGetter","index","rowStyle","borderBottom","headerStyle","color","fontWeight","label","dataKey","cellRenderer","animated","Container","Header","CloseButton","Popup","React","memo","isLocked","callback","isVisible","children","scrollLock","document","body","overflow","handler","event","window","addEventListener","removeEventListener","transitions","useTransition","from","enter","leave","unique","config","duration","transitions2","transform","ReactDOM","createPortal","item","props","e","stopPropagation","Row","Profile","UsersHandler","SettingsHandler","App","className","basename","path","component","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00abb163.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: Yellow;\n  padding: 30px;\n  justify-content: space-between;\n  background: #55b6a8;\n  p {\n    color: #fff;\n    margin: 0;\n    font-weight: 400;\n  }\n  align-items: center;\n  box-shadow: 0px 22px 24px 0px rgba(46, 51, 51, 0.07);\n`;\n\nexport const NavLinks = styled.nav`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: #fff;\n  padding: 20px;\n  font-weight: 0;\n  opacity: 0.6;\n  transition: 0.3s;\n  display: flex;\n  svg {\n    margin-right: 10px;\n  }\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  border: none;\n  background: none;\n  color: #fff;\n`;\n\nexport const UsernameText = styled.p`\n  margin-top: 10px;\n`;\n","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n  padding: 0;\n  margin: 0;\n  vertical-align: middle;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n`;\n","import React from \"react\";\nimport { Image } from \"./style\";\n\nexport const Avatar: React.FC<{ img: string }> = ({ img }) => {\n  return <Image src={img} alt=\"placeholder avatar\" />;\n};\n","import { ActionType, createAction } from \"typesafe-actions\";\nimport { RegistrationValues } from \"./types\";\n\nconst registerUser = createAction(\"user registered\")<\n  Partial<RegistrationValues>\n>();\nconst userRegistered = createAction(\"[saga] user registered\")<\n  RegistrationValues\n>();\nconst userLoginSubmitted = createAction(\"[saga] user login submitted\")<{\n  email: string;\n  password: string;\n}>();\nconst logoutButtonClicked = createAction(\"logout button clicked\")();\nconst signInModeButtonClicked = createAction(\"sign in mode button clicked\")();\nconst signUpModeButtonClicked = createAction(\"sign up mode button clicked\")();\nconst viewProfileClicked = createAction(\"view profile button clicked\")<\n  string\n>();\nconst activeProfileClosed = createAction(\"active profile closed\")();\nconst profileDeleted = createAction(\"profile deleted\")<string>();\nexport const actions = {\n  registerUser,\n  userRegistered,\n  userLoginSubmitted,\n  logoutButtonClicked,\n  signInModeButtonClicked,\n  signUpModeButtonClicked,\n  viewProfileClicked,\n  activeProfileClosed,\n  profileDeleted,\n};\n\nexport type Actions = ActionType<typeof actions>;\n","import { put } from \"@redux-saga/core/effects\";\nimport { actions } from \"./actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport function* registrationSaga({ payload }) {\n  try {\n    // here is where we would handle api calls/interacting with the database...\n    yield put(actions.userRegistered({ ...payload, id: uuidv4() }));\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import { getType } from \"typesafe-actions\";\nimport { all, takeLatest } from \"@redux-saga/core/effects\";\nimport { actions } from \"./actions\";\nimport { registrationSaga } from \"./saga\";\n\nexport function* rootSaga() {\n  yield all([takeLatest(getType(actions.registerUser), registrationSaga)]);\n}\n","import { Actions, actions } from \"./actions\";\nimport { Reducer, createStore, applyMiddleware } from \"redux\";\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { rootSaga } from \"./rootSaga\";\nimport produce from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { RegistrationValues, User } from \"./types\";\nimport * as Faker from \"faker\";\nimport { format } from \"date-fns\";\n\nfunction generateUsers() {\n  let users = [];\n\n  for (let id = 1; id <= 50; id++) {\n    let avatar = Faker.random.image();\n    let id = Faker.random.uuid();\n    let firstName = Faker.name.firstName();\n    let lastName = Faker.name.lastName();\n    let email = Faker.internet.email();\n    let dateOfBirth = format(Faker.date.past(), \"dd/LL/Y\");\n\n    users.push({\n      id,\n      avatar,\n      firstName,\n      lastName,\n      dateOfBirth,\n      email,\n    });\n  }\n\n  return users;\n}\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"activeProfile\", \"mode\", \"userData\"],\n};\n\nconst initialState = () => ({\n  mode: \"Sign In\" as \"Sign In\" | \"Sign Up\",\n  registeredUsers: [] as Exclude<RegistrationValues, \"confirmPassword\">[],\n  activeUser: undefined as undefined | string,\n  userData: generateUsers() as User[],\n  activeProfile: undefined as undefined | string,\n});\n\nexport type State = Readonly<ReturnType<typeof initialState>>;\n\nexport const rootReducer: Reducer<State, Actions> = (\n  state = initialState(),\n  action: Actions\n) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case getType(actions.userRegistered):\n        if (\n          !draft.registeredUsers\n            .map((user) => user.email)\n            .includes(action.payload.email)\n        ) {\n          draft.registeredUsers = [...draft.registeredUsers, action.payload];\n          draft.activeUser = action.payload.id;\n        }\n        break;\n      case getType(actions.userLoginSubmitted):\n        const user = draft.registeredUsers.find(\n          (u) => u.email === action.payload.email\n        );\n        if (user && user.password === action.payload.password) {\n          draft.activeUser = user.id;\n        }\n        break;\n      case getType(actions.logoutButtonClicked):\n        draft.activeUser = undefined;\n        break;\n      case getType(actions.signInModeButtonClicked):\n        draft.mode = \"Sign In\";\n        break;\n      case getType(actions.signUpModeButtonClicked):\n        draft.mode = \"Sign Up\";\n        break;\n      case getType(actions.activeProfileClosed):\n        draft.activeProfile = undefined;\n        break;\n      case getType(actions.viewProfileClicked):\n        draft.activeProfile = action.payload;\n        break;\n\n      case getType(actions.profileDeleted):\n        if (draft.activeProfile === action.payload)\n          draft.activeProfile = undefined;\n\n        draft.userData = [\n          ...draft.userData.filter((data) => data.id !== action.payload),\n        ];\n        break;\n    }\n  });\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport const useTypedSelector: TypedUseSelectorHook<State> = useSelector;\n","import React from \"react\";\nimport { Avatar } from \"../Avatar\";\nimport { useTypedSelector } from \"../../store\";\nimport { UsernameText } from \"./style\";\n\nexport const ProfileInfo = () => {\n  const user = useTypedSelector((state) =>\n    state.registeredUsers.find((user) => user.id === state.activeUser)\n  );\n  return (\n    <span>\n      <Avatar img={process.env.PUBLIC_URL + \"/placeholder.jpg\"} />\n      <UsernameText>{`${user?.firstName} ${user?.lastName}`}</UsernameText>\n    </span>\n  );\n};\n","import React from \"react\";\nimport { Wrapper, NavLinks, Link, Button } from \"./style\";\nimport { ProfileInfo } from \"./ProfileInfo\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { actions } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { FaLock, FaUsers, FaCog } from \"react-icons/fa\";\n\nexport const SideMenu = () => {\n  let history = useHistory();\n  const location = useLocation();\n  const isLoggedIn = location.pathname !== \"/\";\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(actions.logoutButtonClicked());\n    history.push(\"/\");\n  };\n  return isLoggedIn ? (\n    <Wrapper>\n      <ProfileInfo />\n      <NavLinks>\n        <Link exact to=\"/users\" activeStyle={{ opacity: \"1\" }}>\n          <FaUsers size=\"24\" />\n          Users\n        </Link>\n        <Link exact to=\"/settings\" activeStyle={{ opacity: \"1\" }}>\n          <FaCog size=\"24\" />\n          Settings\n        </Link>\n      </NavLinks>\n      <Button onClick={handleLogout}>\n        <FaLock /> Logout\n      </Button>\n    </Wrapper>\n  ) : null;\n};\n","import styled from \"styled-components\";\nimport { Form as FormikForm, Field as FormikField } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Input = styled(FormikField)`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  background: #55b6a8;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n  border: none;\n`;\n\nexport const InputSpan = styled.span`\n  display: flex;\n  flex: 1;\n  justify-content: stretch;\n  align-items: flex-end;\n  input {\n    flex: 1;\n  }\n  span:first-child {\n    margin-right: 5px;\n  }\n  span:last-child {\n    margin-left: 5px;\n  }\n`;\n\nexport const ErrorWrapper = styled.span`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  input {\n    flex: 0;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  margin: 0;\n  color: red;\n  text-align: left !important;\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 20px;\n    left: 10px;\n  }\n  flex: 1;\n  display: flex;\n  input {\n    flex: 1;\n  }\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Form,\n  Input,\n  Button,\n  InputSpan,\n  ErrorWrapper,\n  ErrorText,\n  IconContainer,\n} from \"./style\";\nimport { actions } from \"../../store/actions\";\nimport { RegistrationValues } from \"../../store/types\";\nimport { FaUser, FaEnvelope, FaLock } from \"react-icons/fa\";\n\nconst Schema = Yup.object().shape({\n  firstName: Yup.string()\n    .required(\"First name is required\")\n    .min(2, \"Minimum 2 characters\")\n    .max(50, \"Maximum 15 characters\"),\n  lastName: Yup.string()\n    .required(\"Last name is required\")\n    .min(2, \"Minimum 2 characters\")\n    .max(50, \"Maximum 15 characters\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: Yup.string()\n    .required(\"Password is required\")\n    .min(6, \"Password must contains at least 6 characters\"),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\"), undefined], \"Passwords must match\")\n    .required(\"You must confirm your password\"),\n});\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const handleSignup = (values: Partial<RegistrationValues>) => {\n    dispatch(actions.registerUser(values));\n  };\n\n  const initialValues: Partial<RegistrationValues> = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, actions) => {\n        handleSignup(values);\n      }}\n      validationSchema={Schema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          <InputSpan>\n            <ErrorWrapper>\n              {errors.firstName && touched.firstName && (\n                <ErrorText>{errors.firstName}</ErrorText>\n              )}\n              <IconContainer>\n                <FaUser />\n                <Input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  placeholder=\"First name\"\n                  type=\"text\"\n                ></Input>\n              </IconContainer>\n            </ErrorWrapper>\n            <ErrorWrapper>\n              {errors.lastName && touched.lastName && (\n                <ErrorText>{errors.lastName}</ErrorText>\n              )}\n              <IconContainer>\n                <FaUser />\n                <Input\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  placeholder=\"Last name\"\n                  type=\"text\"\n                ></Input>\n              </IconContainer>\n            </ErrorWrapper>\n          </InputSpan>\n          {errors.email && touched.email && (\n            <ErrorText>{errors.email}</ErrorText>\n          )}\n          <IconContainer>\n            <FaEnvelope />\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"email\"\n            ></Input>\n          </IconContainer>\n          {errors.password && touched.password && (\n            <ErrorText>{errors.password}</ErrorText>\n          )}\n          <IconContainer>\n            <FaLock />\n            <Input\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n            ></Input>\n          </IconContainer>\n          {errors.confirmPassword && touched.confirmPassword && (\n            <ErrorText>{errors.confirmPassword}</ErrorText>\n          )}\n          <IconContainer>\n            <FaLock />\n            <Input\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n            ></Input>\n          </IconContainer>\n          <Button type=\"submit\">Sign Up</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n  /* padding: 30px 20px; */\n`;\n\nexport const SectionWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 30px 15%;\n  justify-content: center;\n  color: #55b6a8;\n  align-items: center;\n`;\n\nexport const SubContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background: #55b6a8;\n  color: #fff;\n  width: 300px;\n  h1 {\n    margin: 0;\n  }\n  p {\n    margin: 20px 0;\n  }\n  button {\n    padding: 15px 30px;\n  }\n`;\n\nexport const SignInButton = styled.button`\n  border: 1px solid #fff;\n  background: transparent;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { RegistrationForm } from \"../../components/RegistrationForm\";\nimport { actions } from \"../../store/actions\";\nimport {\n  SectionWrapper,\n  MainContainer,\n  SubContainer,\n  SignInButton,\n} from \"./style\";\n\nexport const CreateAccount = () => {\n  const dispatch = useDispatch();\n  return (\n    <SectionWrapper>\n      <SubContainer>\n        <h1>Welcome Back!</h1>\n        <p>Already have an account? Click below to login!</p>\n        <SignInButton\n          onClick={() => dispatch(actions.signInModeButtonClicked())}\n        >\n          Sign In\n        </SignInButton>\n      </SubContainer>\n      <MainContainer>\n        <h1>Create Account</h1>\n        <RegistrationForm />\n      </MainContainer>\n    </SectionWrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport { Form as FormikForm, Field as FormikField } from \"formik\";\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  p {\n    text-align: center;\n    cursor: pointer;\n  }\n`;\n\nexport const Input = styled(FormikField)`\n  padding: 15px 10px;\n  margin: 5px 0;\n  background: #f5f5f5;\n  border: none;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  background: #55b6a8;\n  color: #fff;\n  margin-top: 5px;\n  padding: 15px 10px;\n  border: none;\n`;\n\nexport const ErrorText = styled.p`\n  margin: 0;\n  color: red;\n  text-align: left !important;\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 20px;\n    left: 10px;\n  }\n  flex: 1;\n  display: flex;\n  input {\n    flex: 1;\n  }\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Input, Button, ErrorText, IconContainer } from \"./style\";\nimport { FaEnvelope, FaLock } from \"react-icons/fa\";\nimport { actions } from \"../../store/actions\";\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: Yup.string()\n    .required(\"Password is required\")\n    .min(6, \"Password must contains at least 6 characters\"),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues: { email: string; password: string } = {\n    email: \"\",\n    password: \"\",\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        dispatch(actions.userLoginSubmitted(values));\n      }}\n      validationSchema={Schema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          {errors.email && touched.email && (\n            <ErrorText>{errors.email}</ErrorText>\n          )}\n          <IconContainer>\n            <FaEnvelope />\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              type=\"email\"\n            ></Input>\n          </IconContainer>\n          {errors.password && touched.password && (\n            <ErrorText>{errors.password}</ErrorText>\n          )}\n          <IconContainer>\n            <FaLock />\n            <Input\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n            ></Input>\n          </IconContainer>\n          <p>Forgot your password?</p>\n          <Button type=\"submit\">Sign In</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { LoginForm } from \"../../components/LoginForm\";\nimport { actions } from \"../../store/actions\";\nimport {\n  SectionWrapper,\n  MainContainer,\n  SubContainer,\n  SignInButton,\n} from \"./style\";\n\nexport const SignIn = () => {\n  const dispatch = useDispatch();\n  return (\n    <SectionWrapper>\n      <SubContainer>\n        <h1>Welcome, Friend!</h1>\n        <p>Never been here before? Click below to create an account!</p>\n        <SignInButton\n          onClick={() => dispatch(actions.signUpModeButtonClicked())}\n        >\n          Sign Up\n        </SignInButton>\n      </SubContainer>\n      <MainContainer>\n        <h1>Sign In</h1>\n        <LoginForm />\n      </MainContainer>\n    </SectionWrapper>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useTypedSelector } from \"../../store\";\nimport { CreateAccount } from \"./CreateAccount\";\nimport { Wrapper } from \"./style\";\nimport { useHistory } from \"react-router-dom\";\nimport { SignIn } from \"./SignIn\";\n\nexport const LoginHandler = () => {\n  let history = useHistory();\n  const authetnicated = useTypedSelector((state) => state.activeUser);\n  const mode = useTypedSelector((state) => state.mode);\n  useEffect(() => {\n    if (authetnicated) history.push(\"/users\");\n  }, [authetnicated, history]);\n  return (\n    <Wrapper>{mode === \"Sign Up\" ? <CreateAccount /> : <SignIn />}</Wrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n  padding: 30px;\n  overflow: hidden;\n  /* padding: 30px 20px; */\n`;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  margin-bottom: 60px;\n  overflow: hidden;\n  h1 {\n    margin: 0 0 5px 0;\n  }\n`;\n\nexport const ControlSpan = styled.span`\n  display: flex;\n  button {\n    padding: 5px 10px;\n  }\n`;\n\nexport const ResultsText = styled.p`\n  color: grey;\n  margin-bottom: 0;\n`;\n\nexport const Button = styled.button`\n  background: #55b6a8;\n  color: #fff;\n  padding: 15px 10px;\n  border: none;\n`;\n","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n  padding: 5px 10px;\n  background: #f5f5f5;\n  border: none;\n  margin-right: 10px;\n`;\n","import React from \"react\";\nimport { Input } from \"./style\";\n\nexport const Searchbar = () => {\n  return (\n    <Input\n      type=\"search\"\n      id=\"gsearch\"\n      name=\"gsearch\"\n      placeholder=\"Search\"\n    ></Input>\n  );\n};\n","import React from \"react\";\nimport { Wrapper, ControlSpan, ResultsText, Button } from \"./style\";\nimport { Searchbar } from \"../Searchbar\";\nimport { FaPlus } from \"react-icons/fa\";\n\nexport const ControlBar: React.FC<{ resultsLength: number }> = ({\n  resultsLength,\n}) => {\n  return (\n    <Wrapper>\n      <span>\n        <h1>User Management</h1>\n        <ResultsText>{`${resultsLength} results found`}</ResultsText>\n      </span>\n      <ControlSpan>\n        <Searchbar />\n        <Button>\n          <FaPlus />\n          Add User\n        </Button>\n      </ControlSpan>\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  color: #55b6a8;\n  background: none;\n  border: none;\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Column,\n  Table as VirtualizedTable,\n  AutoSizer,\n} from \"react-virtualized\";\nimport \"react-virtualized/styles.css\"; // only needs to be imported once\nimport { actions } from \"../../store/actions\";\nimport { User } from \"../../store/types\";\nimport { FaUser } from \"react-icons/fa\";\nimport { Button } from \"./style\";\n\nexport const Table: React.FC<{ list: User[]; headers: string[] }> = ({\n  list,\n  headers,\n}) => {\n  const dispatch = useDispatch();\n  const AvatarCell = ({ cellData }: any) => (\n    <img\n      key={cellData}\n      src={cellData}\n      style={{ height: \"50px\" }}\n      alt=\"user avatar\"\n    />\n  );\n\n  const ControlsCell = ({ cellData }: any) => (\n    <div key={cellData}>\n      <Button onClick={() => dispatch(actions.viewProfileClicked(cellData))}>\n        <FaUser />\n        View Profile\n      </Button>\n    </div>\n  );\n\n  return (\n    <AutoSizer>\n      {({ height, width }) => (\n        <VirtualizedTable\n          width={width}\n          height={height}\n          headerHeight={50}\n          rowHeight={50}\n          rowCount={list.length}\n          rowGetter={({ index }) => list[index]}\n          rowStyle={{ borderBottom: \"2px solid #eee\" }}\n          headerStyle={{\n            color: \"grey\",\n            fontWeight: 600,\n          }}\n        >\n          {headers.map((header) => (\n            <Column\n              key={header}\n              width={width}\n              label={header !== \"id\" ? header : undefined}\n              dataKey={header}\n              cellRenderer={\n                header === \"avatar\"\n                  ? AvatarCell\n                  : header === \"id\"\n                  ? ControlsCell\n                  : undefined\n              }\n            />\n          ))}\n        </VirtualizedTable>\n      )}\n    </AutoSizer>\n  );\n};\n","import styled from \"styled-components\";\nimport { animated } from \"react-spring\";\n\nexport const Wrapper = styled(animated.div)`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  background: rgba(0, 0, 0, 0.6);\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Container = styled(animated.div)`\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n  position: relative;\n  max-width: 80%;\n  max-height: 80%;\n  align-items: stretch;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex: 1;\n`;\n\nexport const CloseButton = styled.button`\n  background: transparent;\n  border: none;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  padding: 0;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useTransition } from \"react-spring\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { Wrapper, Container, Header, CloseButton } from \"./style\";\nimport { useScrollLock } from \"../../hooks/useScrollLock\";\nimport { useKeyboardEvent } from \"../../hooks/useKeyboardEvent\";\n\nexport const Popup: React.FC<{\n  isVisible: boolean;\n  onClick: () => void;\n  scrollLock?: boolean;\n}> = React.memo(({ isVisible, onClick, children, scrollLock = false }) => {\n  useScrollLock(isVisible && scrollLock ? true : false);\n  useKeyboardEvent(\"Escape\", () => {\n    if (isVisible) onClick();\n  });\n  const transitions = useTransition(isVisible, null, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    unique: true,\n    config: { duration: 300 },\n  });\n\n  const transitions2 = useTransition(isVisible, null, {\n    from: { transform: \"scale(0)\" },\n    enter: { transform: \"scale(1)\" },\n    leave: { transform: \"scale(0)\" },\n    unique: true,\n    config: { duration: 300 },\n  });\n\n  return ReactDOM.createPortal(\n    <>\n      {transitions.map(\n        ({ item, key, props }) =>\n          item && (\n            <Wrapper onClick={onClick} style={props} key={key}>\n              {transitions2.map(\n                ({ item, key, props }) =>\n                  item && (\n                    <Container\n                      key={key}\n                      style={props}\n                      onClick={(e) => e.stopPropagation()}\n                    >\n                      <Header>\n                        <CloseButton onClick={onClick}>\n                          <FaTimes />\n                        </CloseButton>\n                      </Header>\n                      {children}\n                    </Container>\n                  )\n              )}\n            </Wrapper>\n          )\n      )}\n    </>,\n    document.body\n  );\n});\n","import { useEffect } from \"react\";\n\nexport function useScrollLock(isLocked: boolean) {\n  useEffect(() => {\n    isLocked\n      ? (document.body.style.overflow = \"hidden\")\n      : (document.body.style.overflow = \"unset\");\n    return () => {\n      document.body.style.overflow = \"unset\";\n    };\n  }, [isLocked]);\n}\n","import { useEffect } from \"react\";\n\nexport function useKeyboardEvent(key: React.Key, callback: () => void) {\n  useEffect(() => {\n    const handler = function (event: KeyboardEvent) {\n      if (event.key === key) {\n        callback();\n      }\n    };\n    window.addEventListener(\"keydown\", handler);\n    return () => {\n      window.removeEventListener(\"keydown\", handler);\n    };\n  }, [callback, key]);\n}\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Row = styled.span`\n  display: flex;\n  h3,\n  p {\n    margin: 0;\n  }\n  h3 {\n    margin-right: 10px;\n  }\n  p {\n    margin-left: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  background: red;\n  color: #fff;\n  border: none;\n  margin-top: 20px;\n`;\n","import React from \"react\";\nimport { useTypedSelector } from \"../../store\";\nimport { Avatar } from \"../Avatar\";\nimport { Wrapper, Row, Button } from \"./style\";\nimport { FaTrash } from \"react-icons/fa\";\nimport { actions } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\n\nexport const Profile: React.FC<{ id?: string }> = ({ id }) => {\n  const user = useTypedSelector((state) =>\n    state.userData.find((user) => user.id === id)\n  );\n  const dispatch = useDispatch();\n  return user ? (\n    <Wrapper>\n      <Avatar img={user.avatar} />\n      <h1>{`${user.firstName} ${user.lastName}`}</h1>\n      <Row>\n        <h3>Date of Birth</h3>\n        <p>{user.dateOfBirth}</p>\n      </Row>\n      <Button onClick={() => dispatch(actions.profileDeleted(user.id))}>\n        <FaTrash />\n        Delete Profile\n      </Button>\n    </Wrapper>\n  ) : null;\n};\n","import React from \"react\";\nimport { Wrapper } from \"./style\";\nimport { ControlBar } from \"../../components/ControlBar\";\nimport { Table } from \"../../components/Table\";\nimport { Popup } from \"../../components/Popup\";\nimport { User } from \"../../store/types\";\nimport { useTypedSelector } from \"../../store\";\nimport { actions } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Profile } from \"../../components/Profile\";\n\nexport const UsersHandler = () => {\n  const dispatch = useDispatch();\n  const list = useTypedSelector((state) => state.userData);\n  const activeProfile = useTypedSelector((state) => state.activeProfile);\n  const headers = [\n    \"avatar\",\n    \"firstName\",\n    \"lastName\",\n    \"dateOfBirth\",\n    \"email\",\n    \"id\",\n  ];\n\n  return (\n    <Wrapper>\n      <Popup\n        isVisible={activeProfile ? true : false}\n        onClick={() => dispatch(actions.activeProfileClosed())}\n      >\n        <Profile id={activeProfile} />\n      </Popup>\n      <ControlBar resultsLength={list.length} />\n      <Table list={list as User[]} headers={headers} />\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n`;\n","import React from \"react\";\nimport { Wrapper } from \"./style\";\n\nexport const SettingsHandler = () => {\n  return <Wrapper></Wrapper>;\n};\n","import React from \"react\";\r\nimport { Route, HashRouter } from \"react-router-dom\";\r\nimport { SideMenu } from \"./components/SideMenu\";\r\nimport { LoginHandler } from \"./handlers/LoginHandler\";\r\nimport { UsersHandler } from \"./handlers/UsersHandler\";\r\nimport { SettingsHandler } from \"./handlers/SettingsHandler\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <SideMenu />\r\n        <Route exact path=\"/\" component={LoginHandler} />\r\n        <Route exact path=\"/users\" component={UsersHandler} />\r\n        <Route exact path=\"/settings\" component={SettingsHandler} />\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { store } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}